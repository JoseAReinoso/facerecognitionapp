 build components
1. npx create-react-app my-app 
2. Picture what components you want to create, take a look at image of my wireframe i want name wireframe.
3. in this case ill create the next components = Navigation, Logo, ImageLinkFrom,rank and facerecognition .
4. for styling ill use something called tachyons, therefore npm install it and import it on index.js import 'tachyons'
5. to give that nice funtionality to the logo use react-tilt npm install --save react-tilt  https://www.npmjs.com/package/react-tilt
6.install particles.js to install that nice moving particles....see https://www.npmjs.com/package/react-particles-js  & https://vincentgarreau.com/particles.js/
to see options ...check App.js to see how i configured it. check .particles class to see how to make sure it stays in the back of site.

create state
7.create state(look at App constructor )
8.setup onSubmit and onChange on App.js and pass through POP to ImageLinkFrom /https://docs.clarifai.com/
Face Detection model we will be using: https://www.clarifai.com/models/face-detection
How we will use the API with JS (don't worry I will show you the easy way to do this): https://github.com/Clarifai/clarifai-javascript#basic-use
Finally, this is the list of all the models you can use with this API if you want to customize your project: https://www.clarifai.com/model-gallery


set setState to actually change on the first try by passing a function to it
9.https://stackoverflow.com/questions/38558200/react-setstate-not-updating-immediately

to get the square around the face do teh following
10.Set up an ID to the img at FaceRecognition.js, and then do some DOM manipulation to it on App.js
11.Then get the image width and height and do some calculation to get the exact ping where there sqare points will be on the calculateFaceLocation
function and return it.
12.create a displayFacebox function that will set the box state via de onsubmit function.
13.pass the box state to facerecognition.js.
14 create a new div and create a class and add some styling in a new css file.. and finally add styling passing the location where line
will be formed.



